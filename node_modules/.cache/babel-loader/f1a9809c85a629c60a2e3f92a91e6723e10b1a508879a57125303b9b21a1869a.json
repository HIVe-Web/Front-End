{"ast":null,"code":"var _jsxFileName = \"/Users/gwondongmin/Desktop/HIVe/hive/src/components/home/Banner.jsx\",\n  _s2 = $RefreshSig$();\n// React 및 관련 라이브러리 import\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\n// 배너 이미지 import\nimport Banner1 from \"../../assets/images/banner1.png\";\n\n// 상단-배너+인기검색어 스타일 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #2A2A2A;\n`;\nconst Button = styled.img`\n  width: 2.5vw;\n  height: 2.5vw;\n  cursor: pointer;\n`;\nconst Banner = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  // 배너 이미지 배열\n  const images = [Banner1, Banner1, Banner1];\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  // 슬라이드 변경 처리 함수\n  const handleSlideChange = direction => {\n    _s();\n    let newIndex = currentSlide + direction;\n    if (newIndex < 0) {\n      newIndex = images.length - 1;\n    } else if (newIndex >= images.length) {\n      newIndex = 0;\n    }\n\n    // 자동 슬라이드 타이머 설정\n    useEffect(() => {\n      const autoSlideTimer = setInterval(() => {\n        setCurrentSlide(prevSlide => {\n          let newIndex = prevSlide + 1;\n          if (newIndex >= images.length) {\n            newIndex = 0;\n          }\n          return newIndex;\n        });\n      }, 3000);\n\n      // 컴포넌트 언마운트 시 타이머 정리\n      return () => {\n        clearInterval(autoSlideTimer);\n      };\n    }, [images.length]);\n    //인기검색어\n    const popularKeywords = [\"경영 세미나\", \"취업\", \"학술대회\", \"대학 경연\", \"대학 세미나\", \"박람회\"];\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"asdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n  _s(handleSlideChange, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n_s2(Banner, \"VQw0KpRgltXDNPWBgmV3GhZXdQE=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useState","useEffect","styled","Banner1","jsxDEV","_jsxDEV","TopContainer","div","Button","img","Banner","_s2","_s","$RefreshSig$","images","currentSlide","setCurrentSlide","handleSlideChange","direction","newIndex","length","autoSlideTimer","setInterval","prevSlide","clearInterval","popularKeywords","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gwondongmin/Desktop/HIVe/hive/src/components/home/Banner.jsx"],"sourcesContent":["// React 및 관련 라이브러리 import\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\n// 배너 이미지 import\nimport Banner1 from \"../../assets/images/banner1.png\";\n\n// 상단-배너+인기검색어 스타일 정의\nconst TopContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #2A2A2A;\n`;\n\nconst Button = styled.img`\n  width: 2.5vw;\n  height: 2.5vw;\n  cursor: pointer;\n`;\n\nconst Banner = () => {\n\n  // 배너 이미지 배열\n  const images = [Banner1, Banner1, Banner1];\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  // 슬라이드 변경 처리 함수\n  const handleSlideChange = (direction) => {\n    let newIndex = currentSlide + direction;\n\n    if (newIndex < 0) {\n      newIndex = images.length - 1;\n    } else if (newIndex >= images.length) {\n      newIndex = 0;\n    }\n\n    // 자동 슬라이드 타이머 설정\n    useEffect(() => {\n      const autoSlideTimer = setInterval(() => {\n        setCurrentSlide((prevSlide) => {\n          let newIndex = prevSlide + 1;\n          if (newIndex >= images.length) {\n            newIndex = 0;\n          }\n          return newIndex;\n        });\n      }, 3000);\n\n      // 컴포넌트 언마운트 시 타이머 정리\n      return () => {\n        clearInterval(autoSlideTimer);\n      };\n    }, [images.length]);\n    //인기검색어\n    const popularKeywords = [\n      \"경영 세미나\",\n      \"취업\",\n      \"학술대회\",\n      \"대학 경연\",\n      \"대학 세미나\",\n      \"박람회\",\n    ];\n\n    return (\n      <h2>asdf</h2>\n    )\n  }\n}\n\n  export default Banner;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AACA,OAAOC,OAAO,MAAM,iCAAiC;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGJ,MAAM,CAACK,GAAI;AAChC;AACA;AACA;AACA,CAAC;AAED,MAAMC,MAAM,GAAGN,MAAM,CAACO,GAAI;AAC1B;AACA;AACA;AACA,CAAC;AAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEnB;EACA,MAAMC,MAAM,GAAG,CAACX,OAAO,EAAEA,OAAO,EAAEA,OAAO,CAAC;EAC1C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMiB,iBAAiB,GAAIC,SAAS,IAAK;IAAAN,EAAA;IACvC,IAAIO,QAAQ,GAAGJ,YAAY,GAAGG,SAAS;IAEvC,IAAIC,QAAQ,GAAG,CAAC,EAAE;MAChBA,QAAQ,GAAGL,MAAM,CAACM,MAAM,GAAG,CAAC;IAC9B,CAAC,MAAM,IAAID,QAAQ,IAAIL,MAAM,CAACM,MAAM,EAAE;MACpCD,QAAQ,GAAG,CAAC;IACd;;IAEA;IACAlB,SAAS,CAAC,MAAM;MACd,MAAMoB,cAAc,GAAGC,WAAW,CAAC,MAAM;QACvCN,eAAe,CAAEO,SAAS,IAAK;UAC7B,IAAIJ,QAAQ,GAAGI,SAAS,GAAG,CAAC;UAC5B,IAAIJ,QAAQ,IAAIL,MAAM,CAACM,MAAM,EAAE;YAC7BD,QAAQ,GAAG,CAAC;UACd;UACA,OAAOA,QAAQ;QACjB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;;MAER;MACA,OAAO,MAAM;QACXK,aAAa,CAACH,cAAc,CAAC;MAC/B,CAAC;IACH,CAAC,EAAE,CAACP,MAAM,CAACM,MAAM,CAAC,CAAC;IACnB;IACA,MAAMK,eAAe,GAAG,CACtB,QAAQ,EACR,IAAI,EACJ,MAAM,EACN,OAAO,EACP,QAAQ,EACR,KAAK,CACN;IAED,oBACEpB,OAAA;MAAAqB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAEjB,CAAC;EAAAlB,EAAA,CAvCKK,iBAAiB;AAwCzB,CAAC;AAAAN,GAAA,CA/CKD,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAiDV,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}